# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# --- Prompt Format --- 
format = """
$os\
$username\
$directory\
$git_branch\
$git_status\
$php\
$java\
$python\
$docker_context\
$line_break\
$character
"""
right_format = """
${custom.angular}\
${custom.pnpm}\
$nodejs\
$time
"""

# --- Global Settings --- 
palette = 'onedark'

# --- Palettes --- 
[palettes.gruvbox_dark]
color_fg0 = '#fbf1c7'
color_bg1 = '#3c3836'
color_bg3 = '#665c54'
color_blue = '#458588'
color_aqua = '#689d6a'
color_green = '#98971a'
color_orange = '#d65d0e'
color_purple = '#b16286'
color_red = '#cc241d'
color_yellow = '#d79921'

[palettes.my_nord]
dark_blue = '#5E81AC'
blue = '#81A1C1'
teal = '#88C0D0'
red = '#BF616A'
orange = '#D08770'
green = '#A3BE8C'
yellow = '#EBCB8B'
purple = '#B48EAD'
gray = '#434C5E'
black = '#2E3440'
white='#D8DEE9'

[palettes.onedark]
dark_blue='#61afef'
blue='#56b6c2'
red='#e06c75'
green='#98c379'
purple='#c678dd'
cyan='#56b6c2'
orange='#be5046'
yellow='#e5c07b'
gray='#828997'
white ='#abb2bf'
black='#2c323c'

# --- Prompt Character --- 
[character]
disabled = false
success_symbol = '[‚ûú](bold fg:green)'
error_symbol = '[‚úó](bold fg:red)'
vimcmd_symbol = '[Ôê¥](bold fg:green)'
vimcmd_replace_one_symbol = '[Ôê¥](bold fg:purple)'
vimcmd_replace_symbol = '[Ôê¥](bold fg:purple)'
vimcmd_visual_symbol = '[Ôê¥](bold fg:yellow)'

# --- Core Prompt Modules --- 
[os]
# disabled = false
style = "fg:white"
format = "[$symbol]($style)"

[os.symbols]
Macos = "Û∞Äµ "

[username]
# show_always = true # Keep commented out unless needed
disabled = false
style_user = "bg:color_orange fg:color_fg0" # Note: Uses colors from undefined palette if username disabled
style_root = "bg:color_orange fg:color_fg0"
format = '[$user ]($style)'

[directory]
style = "fg:dark_blue"
format = "[$path]($style) [$read_only]($read_only_style)"
read_only = " ÔÄ£"
read_only_style = "fg:red"
truncation_length = 3
truncation_symbol = "‚Ä¶/"
truncate_to_repo = true
home_symbol = 'Û∞ãú ~'

[directory.substitutions]
"Documents" = "Û∞àô"
"Downloads" = "ÔÄô"
"Music" = "Û∞ùö"
"Pictures" = "ÔÄæ"
"Developer" = "Û∞≤ã"
"Volumes/StudioX" = "StudioX"

# --- VCS Modules --- 
[git_branch]
symbol = "Ôêò"
style = "bold italic fg:green"
format = 'on [$symbol $branch]($style)'

[git_commit]
tag_symbol = ' Ôêí '

[git_status]
style = "fg:blue"
format = '[$all_status$ahead_behind]($style)'
conflicted = 'üè≥'
up_to_date = ''
untracked = ' Ôî© '
ahead = '‚á°${count}'
diverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'
behind = '‚á£${count}'
stashed = ' Ô£ñ '
modified = ' ÔÅÑ '
staged = '[++${count}]'
renamed = ' Ô™∂ '
deleted = ' ÔÄî '

# --- Language Modules --- 
[java]
symbol = "Óâñ "
style = "fg:orange"
format = '[$symbol$version]($style)'

[nodejs]
detect_files = ['package.json', '.node-version', '!package-lock.yaml']
symbol = "Óúò "
style = "fg:green"
format = ' [$symbol$version]($style)'

[php]
symbol = "Óòà "
style = "fg:purple"
format = '[$symbol$version]($style)'

[python]
symbol = "ÓòÜ "
style = "fg:yellow"
format = '[$symbol$version]($style)'

# --- Custom Modules ---
[custom.angular]
description = "Shows the current Angular version"
detect_folders = [".angular"]
symbol = "Û∞öø"
# Command to extract Angular core version from package.json
# Requires jq and sed to be installed
# command = '''jq -r '(.dependencies? // {} + .devDependencies? // {})["@angular/core"] // empty' package.json | sed 's/[^0-9.]*//g' '''
command = '''jq -r '(.dependencies? // {} + .devDependencies? // {})["@angular/core"] // empty' package.json | sed 's/[^0-9.]*//g' | tr -d '\n' ''' # Remove trailing newline
style = "fg:red"
# Format: Symbol, space, version
format = ' using [$symbol ($output)]($style)'
disabled = false

# --- Tooling Modules --- 
[docker_context]
symbol = "Ôåà "
style = "fg:dark_blue"
format = '[$symbol$context]($style)'
disabled = false

[custom.pnpm]
description = "Shows the current pnpm version"
detect_files = ["pnpm-lock.yaml"]
symbol = "Ó°• "
# Command to extract pnpm version
command = '''pnpm --version | tr -d '\n' ''' # Get version and remove trailing newline
style = "fg:yellow"
# Format: Symbol, space, version
format = ' [$symbol($output)]($style)'
disabled = false

# --- Status Modules --- 
[time]
disabled = false
time_format = "%R" # Hour:Minute Format
style = "fg:gray"
format = ' [Ôê∫ $time]($style)'

# --- Layout Modules --- 
[line_break]
disabled = false

# --- Add comments for sections that were removed or not present ---
# Add a newline before the prompt
# add_newline = true 

# Example of other modules you might add:
# [conda]
# style = "fg:green"
# format = '[${symbol}${environment}]($style)'
